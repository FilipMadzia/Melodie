// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Melodie.API.Migrations
{
    [DbContext(typeof(MelodieAPIContext))]
    [Migration("20240813191454_MusicGenresSeeder")]
    partial class MusicGenresSeeder
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Melodie.API.Data.Entities.AlbumEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("EntityStatus")
                        .HasColumnType("int");

                    b.Property<DateOnly>("ReleaseDate")
                        .HasColumnType("date");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("UpdatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.ToTable("Albums");
                });

            modelBuilder.Entity("Melodie.API.Data.Entities.ArtistEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("EntityStatus")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("UpdatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.ToTable("Artists");

                    b.HasData(
                        new
                        {
                            Id = new Guid("8e05ff08-4c3b-4226-8454-8060b95998c3"),
                            CreatedAt = new DateTime(2024, 8, 13, 21, 14, 53, 536, DateTimeKind.Local).AddTicks(417),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            EntityStatus = 0,
                            Name = "Three Days Grace",
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UpdatedBy = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = new Guid("6ccc8d5e-4792-4a74-87c6-1cb5da69e5ed"),
                            CreatedAt = new DateTime(2024, 8, 13, 21, 14, 53, 536, DateTimeKind.Local).AddTicks(735),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            EntityStatus = 0,
                            Name = "syudou",
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UpdatedBy = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = new Guid("e5e912a4-6a2f-4e28-9def-2ae091c751e5"),
                            CreatedAt = new DateTime(2024, 8, 13, 21, 14, 53, 536, DateTimeKind.Local).AddTicks(744),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            EntityStatus = 0,
                            Name = "Gibbs",
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UpdatedBy = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = new Guid("3a694cd2-16bf-4237-809b-6af3df77b321"),
                            CreatedAt = new DateTime(2024, 8, 13, 21, 14, 53, 536, DateTimeKind.Local).AddTicks(746),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            EntityStatus = 0,
                            Name = "Ashton Irwin",
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UpdatedBy = new Guid("00000000-0000-0000-0000-000000000000")
                        });
                });

            modelBuilder.Entity("Melodie.API.Data.Entities.ArtistMusicGenreEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ArtistId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("EntityStatus")
                        .HasColumnType("int");

                    b.Property<Guid>("MusicGenreId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("UpdatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.ToTable("ArtistMusicGenres");

                    b.HasData(
                        new
                        {
                            Id = new Guid("6addaa0b-74d9-453e-a8e1-deaf1d5c882e"),
                            ArtistId = new Guid("8e05ff08-4c3b-4226-8454-8060b95998c3"),
                            CreatedAt = new DateTime(2024, 8, 13, 21, 14, 53, 536, DateTimeKind.Local).AddTicks(7072),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            EntityStatus = 0,
                            MusicGenreId = new Guid("c73a62f0-50b0-45d2-8a67-a825b4234a3e"),
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UpdatedBy = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = new Guid("4ce26075-e113-4ad7-b1fb-265f1d930396"),
                            ArtistId = new Guid("8e05ff08-4c3b-4226-8454-8060b95998c3"),
                            CreatedAt = new DateTime(2024, 8, 13, 21, 14, 53, 536, DateTimeKind.Local).AddTicks(8463),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            EntityStatus = 0,
                            MusicGenreId = new Guid("acacc132-d554-4bd9-9cb6-e2579e92d5ac"),
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UpdatedBy = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = new Guid("30957b3b-06f6-47ca-a82b-ee8d3707d180"),
                            ArtistId = new Guid("8e05ff08-4c3b-4226-8454-8060b95998c3"),
                            CreatedAt = new DateTime(2024, 8, 13, 21, 14, 53, 536, DateTimeKind.Local).AddTicks(8481),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            EntityStatus = 0,
                            MusicGenreId = new Guid("7a893019-e033-4814-8b6a-bdc9a0ffc747"),
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UpdatedBy = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = new Guid("1f58272b-14b4-4ee9-b1ce-0b4d1cb34148"),
                            ArtistId = new Guid("8e05ff08-4c3b-4226-8454-8060b95998c3"),
                            CreatedAt = new DateTime(2024, 8, 13, 21, 14, 53, 536, DateTimeKind.Local).AddTicks(8486),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            EntityStatus = 0,
                            MusicGenreId = new Guid("dc07f14f-f590-4fc0-b416-c98f73ed70c2"),
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UpdatedBy = new Guid("00000000-0000-0000-0000-000000000000")
                        });
                });

            modelBuilder.Entity("Melodie.API.Data.Entities.LikedEntities.LikedAlbumEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("EntityId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("EntityStatus")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("UpdatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.ToTable("LikedAlbums");
                });

            modelBuilder.Entity("Melodie.API.Data.Entities.LikedEntities.LikedArtistEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("EntityId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("EntityStatus")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("UpdatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.ToTable("LikedArtists");
                });

            modelBuilder.Entity("Melodie.API.Data.Entities.LikedEntities.LikedSingleEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("EntityId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("EntityStatus")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("UpdatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.ToTable("LikedSingles");
                });

            modelBuilder.Entity("Melodie.API.Data.Entities.LikedEntities.LikedTrackEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("EntityId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("EntityStatus")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("UpdatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.ToTable("LikedTracks");
                });

            modelBuilder.Entity("Melodie.API.Data.Entities.MusicGenreEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("EntityStatus")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("UpdatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.ToTable("MusicGenres");

                    b.HasData(
                        new
                        {
                            Id = new Guid("c73a62f0-50b0-45d2-8a67-a825b4234a3e"),
                            CreatedAt = new DateTime(2024, 8, 13, 21, 14, 53, 536, DateTimeKind.Local).AddTicks(3713),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            EntityStatus = 0,
                            Name = "Post-grunge",
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UpdatedBy = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = new Guid("acacc132-d554-4bd9-9cb6-e2579e92d5ac"),
                            CreatedAt = new DateTime(2024, 8, 13, 21, 14, 53, 536, DateTimeKind.Local).AddTicks(4013),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            EntityStatus = 0,
                            Name = "Hard rock",
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UpdatedBy = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = new Guid("7a893019-e033-4814-8b6a-bdc9a0ffc747"),
                            CreatedAt = new DateTime(2024, 8, 13, 21, 14, 53, 536, DateTimeKind.Local).AddTicks(4029),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            EntityStatus = 0,
                            Name = "Alternative rock",
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UpdatedBy = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = new Guid("dc07f14f-f590-4fc0-b416-c98f73ed70c2"),
                            CreatedAt = new DateTime(2024, 8, 13, 21, 14, 53, 536, DateTimeKind.Local).AddTicks(4032),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            EntityStatus = 0,
                            Name = "Alternative metal",
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UpdatedBy = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = new Guid("462a4969-c22c-440c-a017-7b355c8a2e31"),
                            CreatedAt = new DateTime(2024, 8, 13, 21, 14, 53, 536, DateTimeKind.Local).AddTicks(4034),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            EntityStatus = 0,
                            Name = "Nu metal",
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UpdatedBy = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = new Guid("08b5a778-d2c9-4fc1-8237-87215feaa5aa"),
                            CreatedAt = new DateTime(2024, 8, 13, 21, 14, 53, 536, DateTimeKind.Local).AddTicks(4036),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            EntityStatus = 0,
                            Name = "J-Pop",
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UpdatedBy = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = new Guid("8575e91b-c592-49e3-b303-492ab00914c5"),
                            CreatedAt = new DateTime(2024, 8, 13, 21, 14, 53, 536, DateTimeKind.Local).AddTicks(4038),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            EntityStatus = 0,
                            Name = "Hip-hop",
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UpdatedBy = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = new Guid("aba7c265-11f6-40fc-9a36-2ad57ad4b981"),
                            CreatedAt = new DateTime(2024, 8, 13, 21, 14, 53, 536, DateTimeKind.Local).AddTicks(4041),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            EntityStatus = 0,
                            Name = "Pop rock",
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UpdatedBy = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = new Guid("d4589483-9ee4-483c-a8ab-7e263443080c"),
                            CreatedAt = new DateTime(2024, 8, 13, 21, 14, 53, 536, DateTimeKind.Local).AddTicks(4043),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            EntityStatus = 0,
                            Name = "Pop",
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UpdatedBy = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = new Guid("8177358c-d0a2-4493-bffb-8885330d719a"),
                            CreatedAt = new DateTime(2024, 8, 13, 21, 14, 53, 536, DateTimeKind.Local).AddTicks(4045),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            EntityStatus = 0,
                            Name = "Pop punk",
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UpdatedBy = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = new Guid("bae34181-a437-4a63-85d4-af1ce205b863"),
                            CreatedAt = new DateTime(2024, 8, 13, 21, 14, 53, 536, DateTimeKind.Local).AddTicks(4050),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            EntityStatus = 0,
                            Name = "Power pop",
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UpdatedBy = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = new Guid("5000e081-e612-44ca-8cc6-879d2f5929bc"),
                            CreatedAt = new DateTime(2024, 8, 13, 21, 14, 53, 536, DateTimeKind.Local).AddTicks(4053),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            EntityStatus = 0,
                            Name = "Rock",
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UpdatedBy = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = new Guid("1c4dc5bd-9400-4010-825f-8e8a48c14d85"),
                            CreatedAt = new DateTime(2024, 8, 13, 21, 14, 53, 536, DateTimeKind.Local).AddTicks(4055),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            EntityStatus = 0,
                            Name = "New wave",
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UpdatedBy = new Guid("00000000-0000-0000-0000-000000000000")
                        });
                });

            modelBuilder.Entity("Melodie.API.Data.Entities.PlaylistEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("EntityStatus")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("UpdatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.ToTable("Playlists");
                });

            modelBuilder.Entity("Melodie.API.Data.Entities.QueueEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("EntityStatus")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("UpdatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.ToTable("Queues");
                });

            modelBuilder.Entity("Melodie.API.Data.Entities.SingleEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("EntityStatus")
                        .HasColumnType("int");

                    b.Property<Guid>("TrackId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("UpdatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.ToTable("Singles");
                });

            modelBuilder.Entity("Melodie.API.Data.Entities.TrackEntities.AlbumTrackEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("EntityId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("EntityStatus")
                        .HasColumnType("int");

                    b.Property<Guid>("TrackId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("UpdatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.ToTable("AlbumTrack");
                });

            modelBuilder.Entity("Melodie.API.Data.Entities.TrackEntities.QueueTrackEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("EntityId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("EntityStatus")
                        .HasColumnType("int");

                    b.Property<Guid>("TrackId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("UpdatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.ToTable("QueueTrack");
                });

            modelBuilder.Entity("Melodie.API.Data.Entities.TrackEntities.SingleTrackEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("EntityId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("EntityStatus")
                        .HasColumnType("int");

                    b.Property<Guid>("TrackId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("UpdatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.ToTable("SingleTrack");
                });

            modelBuilder.Entity("Melodie.API.Data.Entities.TrackEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("EntityStatus")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("UpdatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.ToTable("Tracks");
                });

            modelBuilder.Entity("Melodie.API.Data.Entities.UserEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("EntityStatus")
                        .HasColumnType("int");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("UpdatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = new Guid("fcbb681a-96b3-4bb1-b343-d7bff5d87a56"),
                            CreatedAt = new DateTime(2024, 8, 13, 21, 14, 53, 533, DateTimeKind.Local).AddTicks(6438),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Email = "seed@seed",
                            EntityStatus = 0,
                            Password = "seed",
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UpdatedBy = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = new Guid("a2c0e834-33fb-485b-9ad2-ba5d4205d1c8"),
                            CreatedAt = new DateTime(2024, 8, 13, 21, 14, 53, 535, DateTimeKind.Local).AddTicks(8353),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Email = "seed2@seed2",
                            EntityStatus = 0,
                            Password = "seed2",
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UpdatedBy = new Guid("00000000-0000-0000-0000-000000000000")
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
