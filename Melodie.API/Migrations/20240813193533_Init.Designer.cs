// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Melodie.API.Migrations
{
    [DbContext(typeof(MelodieAPIContext))]
    [Migration("20240813193533_Init")]
    partial class Init
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Melodie.API.Data.Entities.AlbumEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("EntityStatus")
                        .HasColumnType("int");

                    b.Property<DateOnly>("ReleaseDate")
                        .HasColumnType("date");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("UpdatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.ToTable("Albums");
                });

            modelBuilder.Entity("Melodie.API.Data.Entities.ArtistEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("EntityStatus")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("UpdatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.ToTable("Artists");

                    b.HasData(
                        new
                        {
                            Id = new Guid("5ea691bc-c715-4f6a-b269-d1f24b775184"),
                            CreatedAt = new DateTime(2024, 8, 13, 21, 35, 32, 784, DateTimeKind.Local).AddTicks(701),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            EntityStatus = 0,
                            Name = "Three Days Grace",
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UpdatedBy = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = new Guid("a85be9e6-10ec-49ac-b128-57d62c381186"),
                            CreatedAt = new DateTime(2024, 8, 13, 21, 35, 32, 784, DateTimeKind.Local).AddTicks(991),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            EntityStatus = 0,
                            Name = "syudou",
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UpdatedBy = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = new Guid("143344c4-c357-410f-bd08-f30de66ac46f"),
                            CreatedAt = new DateTime(2024, 8, 13, 21, 35, 32, 784, DateTimeKind.Local).AddTicks(999),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            EntityStatus = 0,
                            Name = "Gibbs",
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UpdatedBy = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = new Guid("cc45cd11-c522-4785-ae6c-22b7af97c4e6"),
                            CreatedAt = new DateTime(2024, 8, 13, 21, 35, 32, 784, DateTimeKind.Local).AddTicks(1001),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            EntityStatus = 0,
                            Name = "Ashton Irwin",
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UpdatedBy = new Guid("00000000-0000-0000-0000-000000000000")
                        });
                });

            modelBuilder.Entity("Melodie.API.Data.Entities.ArtistMusicGenreEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ArtistId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("EntityStatus")
                        .HasColumnType("int");

                    b.Property<Guid>("MusicGenreId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("UpdatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.ToTable("ArtistMusicGenres");

                    b.HasData(
                        new
                        {
                            Id = new Guid("11e9fed8-2a6c-4ef1-af1b-3ff2ad4e0412"),
                            ArtistId = new Guid("5ea691bc-c715-4f6a-b269-d1f24b775184"),
                            CreatedAt = new DateTime(2024, 8, 13, 21, 35, 32, 785, DateTimeKind.Local).AddTicks(1437),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            EntityStatus = 0,
                            MusicGenreId = new Guid("4f5da7ab-e93f-47c6-b118-95ec29f206ae"),
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UpdatedBy = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = new Guid("e6488bd0-bbe5-40b3-9e2a-4d04be13418e"),
                            ArtistId = new Guid("5ea691bc-c715-4f6a-b269-d1f24b775184"),
                            CreatedAt = new DateTime(2024, 8, 13, 21, 35, 32, 785, DateTimeKind.Local).AddTicks(3460),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            EntityStatus = 0,
                            MusicGenreId = new Guid("5242acc6-ec8e-4790-9125-ba63b1894ac6"),
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UpdatedBy = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = new Guid("6972d035-0869-4cd0-b13d-041de54fa8c1"),
                            ArtistId = new Guid("5ea691bc-c715-4f6a-b269-d1f24b775184"),
                            CreatedAt = new DateTime(2024, 8, 13, 21, 35, 32, 785, DateTimeKind.Local).AddTicks(3481),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            EntityStatus = 0,
                            MusicGenreId = new Guid("4bd4e850-e517-48d9-afed-06ea21f37f73"),
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UpdatedBy = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = new Guid("2d892ed1-39bb-4e48-9e59-5f8eecdd8bf0"),
                            ArtistId = new Guid("5ea691bc-c715-4f6a-b269-d1f24b775184"),
                            CreatedAt = new DateTime(2024, 8, 13, 21, 35, 32, 785, DateTimeKind.Local).AddTicks(3496),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            EntityStatus = 0,
                            MusicGenreId = new Guid("26cf26a5-2a94-4e3d-af6e-f9ea822551c7"),
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UpdatedBy = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = new Guid("87ea187c-22ee-48c9-b349-7c6d680ddb20"),
                            ArtistId = new Guid("a85be9e6-10ec-49ac-b128-57d62c381186"),
                            CreatedAt = new DateTime(2024, 8, 13, 21, 35, 32, 785, DateTimeKind.Local).AddTicks(3501),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            EntityStatus = 0,
                            MusicGenreId = new Guid("901b5528-7a47-486b-a902-0b3ce32ffee6"),
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UpdatedBy = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = new Guid("ad19115c-047d-4aa0-967b-6fa9943a11c1"),
                            ArtistId = new Guid("143344c4-c357-410f-bd08-f30de66ac46f"),
                            CreatedAt = new DateTime(2024, 8, 13, 21, 35, 32, 785, DateTimeKind.Local).AddTicks(3506),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            EntityStatus = 0,
                            MusicGenreId = new Guid("c38dd7f4-3151-4650-95be-5be92304fbca"),
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UpdatedBy = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = new Guid("fca1b221-e924-49f3-a3fd-9c5872b066f7"),
                            ArtistId = new Guid("cc45cd11-c522-4785-ae6c-22b7af97c4e6"),
                            CreatedAt = new DateTime(2024, 8, 13, 21, 35, 32, 785, DateTimeKind.Local).AddTicks(3511),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            EntityStatus = 0,
                            MusicGenreId = new Guid("9333bafb-9af5-431b-993b-a45d1c9e7553"),
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UpdatedBy = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = new Guid("8c819d28-ac3d-4b6e-9adc-7dee3f6805ed"),
                            ArtistId = new Guid("cc45cd11-c522-4785-ae6c-22b7af97c4e6"),
                            CreatedAt = new DateTime(2024, 8, 13, 21, 35, 32, 785, DateTimeKind.Local).AddTicks(3516),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            EntityStatus = 0,
                            MusicGenreId = new Guid("2fe32e20-5dd1-439d-b9c4-58606198fa07"),
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UpdatedBy = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = new Guid("946cd5f5-a57d-4cd0-bce9-418920b4ce09"),
                            ArtistId = new Guid("cc45cd11-c522-4785-ae6c-22b7af97c4e6"),
                            CreatedAt = new DateTime(2024, 8, 13, 21, 35, 32, 785, DateTimeKind.Local).AddTicks(3521),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            EntityStatus = 0,
                            MusicGenreId = new Guid("467d0e6f-24bf-4367-90c4-9cd3c9c10448"),
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UpdatedBy = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = new Guid("18f70795-2d7d-4598-90fe-954d8896c572"),
                            ArtistId = new Guid("cc45cd11-c522-4785-ae6c-22b7af97c4e6"),
                            CreatedAt = new DateTime(2024, 8, 13, 21, 35, 32, 785, DateTimeKind.Local).AddTicks(3526),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            EntityStatus = 0,
                            MusicGenreId = new Guid("2082c19f-4779-46c7-99e8-a15052c497f1"),
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UpdatedBy = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = new Guid("cc6d3254-58fa-45fc-9ccd-ffc93a08eb64"),
                            ArtistId = new Guid("cc45cd11-c522-4785-ae6c-22b7af97c4e6"),
                            CreatedAt = new DateTime(2024, 8, 13, 21, 35, 32, 785, DateTimeKind.Local).AddTicks(3531),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            EntityStatus = 0,
                            MusicGenreId = new Guid("15212128-9808-4e5c-8785-22710bc2f720"),
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UpdatedBy = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = new Guid("1112ecec-650a-4031-af21-e119f4b105f7"),
                            ArtistId = new Guid("cc45cd11-c522-4785-ae6c-22b7af97c4e6"),
                            CreatedAt = new DateTime(2024, 8, 13, 21, 35, 32, 785, DateTimeKind.Local).AddTicks(3540),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            EntityStatus = 0,
                            MusicGenreId = new Guid("5beb7ac0-0b1b-4683-8f9a-7781e45eeabe"),
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UpdatedBy = new Guid("00000000-0000-0000-0000-000000000000")
                        });
                });

            modelBuilder.Entity("Melodie.API.Data.Entities.LikedEntities.LikedAlbumEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("EntityId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("EntityStatus")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("UpdatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.ToTable("LikedAlbums");
                });

            modelBuilder.Entity("Melodie.API.Data.Entities.LikedEntities.LikedArtistEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("EntityId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("EntityStatus")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("UpdatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.ToTable("LikedArtists");
                });

            modelBuilder.Entity("Melodie.API.Data.Entities.LikedEntities.LikedSingleEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("EntityId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("EntityStatus")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("UpdatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.ToTable("LikedSingles");
                });

            modelBuilder.Entity("Melodie.API.Data.Entities.LikedEntities.LikedTrackEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("EntityId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("EntityStatus")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("UpdatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.ToTable("LikedTracks");
                });

            modelBuilder.Entity("Melodie.API.Data.Entities.MusicGenreEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("EntityStatus")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("UpdatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.ToTable("MusicGenres");

                    b.HasData(
                        new
                        {
                            Id = new Guid("4f5da7ab-e93f-47c6-b118-95ec29f206ae"),
                            CreatedAt = new DateTime(2024, 8, 13, 21, 35, 32, 784, DateTimeKind.Local).AddTicks(4119),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            EntityStatus = 0,
                            Name = "Post-grunge",
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UpdatedBy = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = new Guid("5242acc6-ec8e-4790-9125-ba63b1894ac6"),
                            CreatedAt = new DateTime(2024, 8, 13, 21, 35, 32, 784, DateTimeKind.Local).AddTicks(4420),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            EntityStatus = 0,
                            Name = "Hard rock",
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UpdatedBy = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = new Guid("4bd4e850-e517-48d9-afed-06ea21f37f73"),
                            CreatedAt = new DateTime(2024, 8, 13, 21, 35, 32, 784, DateTimeKind.Local).AddTicks(4429),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            EntityStatus = 0,
                            Name = "Alternative rock",
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UpdatedBy = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = new Guid("26cf26a5-2a94-4e3d-af6e-f9ea822551c7"),
                            CreatedAt = new DateTime(2024, 8, 13, 21, 35, 32, 784, DateTimeKind.Local).AddTicks(4432),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            EntityStatus = 0,
                            Name = "Alternative metal",
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UpdatedBy = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = new Guid("901b5528-7a47-486b-a902-0b3ce32ffee6"),
                            CreatedAt = new DateTime(2024, 8, 13, 21, 35, 32, 784, DateTimeKind.Local).AddTicks(4434),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            EntityStatus = 0,
                            Name = "Nu metal",
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UpdatedBy = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = new Guid("c38dd7f4-3151-4650-95be-5be92304fbca"),
                            CreatedAt = new DateTime(2024, 8, 13, 21, 35, 32, 784, DateTimeKind.Local).AddTicks(4436),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            EntityStatus = 0,
                            Name = "J-Pop",
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UpdatedBy = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = new Guid("9333bafb-9af5-431b-993b-a45d1c9e7553"),
                            CreatedAt = new DateTime(2024, 8, 13, 21, 35, 32, 784, DateTimeKind.Local).AddTicks(4439),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            EntityStatus = 0,
                            Name = "Hip-hop",
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UpdatedBy = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = new Guid("2fe32e20-5dd1-439d-b9c4-58606198fa07"),
                            CreatedAt = new DateTime(2024, 8, 13, 21, 35, 32, 784, DateTimeKind.Local).AddTicks(4441),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            EntityStatus = 0,
                            Name = "Pop rock",
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UpdatedBy = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = new Guid("467d0e6f-24bf-4367-90c4-9cd3c9c10448"),
                            CreatedAt = new DateTime(2024, 8, 13, 21, 35, 32, 784, DateTimeKind.Local).AddTicks(4447),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            EntityStatus = 0,
                            Name = "Pop",
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UpdatedBy = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = new Guid("2082c19f-4779-46c7-99e8-a15052c497f1"),
                            CreatedAt = new DateTime(2024, 8, 13, 21, 35, 32, 784, DateTimeKind.Local).AddTicks(4450),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            EntityStatus = 0,
                            Name = "Pop punk",
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UpdatedBy = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = new Guid("15212128-9808-4e5c-8785-22710bc2f720"),
                            CreatedAt = new DateTime(2024, 8, 13, 21, 35, 32, 784, DateTimeKind.Local).AddTicks(4452),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            EntityStatus = 0,
                            Name = "Power pop",
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UpdatedBy = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = new Guid("5beb7ac0-0b1b-4683-8f9a-7781e45eeabe"),
                            CreatedAt = new DateTime(2024, 8, 13, 21, 35, 32, 784, DateTimeKind.Local).AddTicks(4454),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            EntityStatus = 0,
                            Name = "Rock",
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UpdatedBy = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = new Guid("5961ec45-4d10-4a0a-8902-0ec20022d3d9"),
                            CreatedAt = new DateTime(2024, 8, 13, 21, 35, 32, 784, DateTimeKind.Local).AddTicks(4456),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            EntityStatus = 0,
                            Name = "New wave",
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UpdatedBy = new Guid("00000000-0000-0000-0000-000000000000")
                        });
                });

            modelBuilder.Entity("Melodie.API.Data.Entities.PlaylistEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("EntityStatus")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("UpdatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.ToTable("Playlists");
                });

            modelBuilder.Entity("Melodie.API.Data.Entities.QueueEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("EntityStatus")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("UpdatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.ToTable("Queues");
                });

            modelBuilder.Entity("Melodie.API.Data.Entities.SingleEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("EntityStatus")
                        .HasColumnType("int");

                    b.Property<DateOnly>("ReleaseDate")
                        .HasColumnType("date");

                    b.Property<Guid>("TrackId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("UpdatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.ToTable("Singles");

                    b.HasData(
                        new
                        {
                            Id = new Guid("f094f816-653c-4c43-aa88-74a36a69b3c8"),
                            CreatedAt = new DateTime(2024, 8, 13, 21, 35, 32, 785, DateTimeKind.Local).AddTicks(7416),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            EntityStatus = 0,
                            ReleaseDate = new DateOnly(2009, 9, 1),
                            TrackId = new Guid("ad956407-0384-4946-898d-c269e78013d8"),
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UpdatedBy = new Guid("00000000-0000-0000-0000-000000000000")
                        });
                });

            modelBuilder.Entity("Melodie.API.Data.Entities.TrackEntities.AlbumTrackEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("EntityId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("EntityStatus")
                        .HasColumnType("int");

                    b.Property<Guid>("TrackId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("UpdatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.ToTable("AlbumTrack");
                });

            modelBuilder.Entity("Melodie.API.Data.Entities.TrackEntities.QueueTrackEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("EntityId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("EntityStatus")
                        .HasColumnType("int");

                    b.Property<Guid>("TrackId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("UpdatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.ToTable("QueueTrack");
                });

            modelBuilder.Entity("Melodie.API.Data.Entities.TrackEntities.SingleTrackEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("EntityId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("EntityStatus")
                        .HasColumnType("int");

                    b.Property<Guid>("TrackId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("UpdatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.ToTable("SingleTrack");

                    b.HasData(
                        new
                        {
                            Id = new Guid("bd6dfe3f-1ce8-4f32-b162-90e3e1aa4b7f"),
                            CreatedAt = new DateTime(2024, 8, 13, 21, 35, 32, 786, DateTimeKind.Local).AddTicks(302),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            EntityId = new Guid("f094f816-653c-4c43-aa88-74a36a69b3c8"),
                            EntityStatus = 0,
                            TrackId = new Guid("00000000-0000-0000-0000-000000000000"),
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UpdatedBy = new Guid("00000000-0000-0000-0000-000000000000")
                        });
                });

            modelBuilder.Entity("Melodie.API.Data.Entities.TrackEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("EntityStatus")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("UpdatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.ToTable("Tracks");

                    b.HasData(
                        new
                        {
                            Id = new Guid("ad956407-0384-4946-898d-c269e78013d8"),
                            CreatedAt = new DateTime(2024, 8, 13, 21, 35, 32, 785, DateTimeKind.Local).AddTicks(5197),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            EntityStatus = 0,
                            Title = "Break",
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UpdatedBy = new Guid("00000000-0000-0000-0000-000000000000")
                        });
                });

            modelBuilder.Entity("Melodie.API.Data.Entities.UserEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("EntityStatus")
                        .HasColumnType("int");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("UpdatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = new Guid("39b2c64e-6626-4a92-8e0a-e4a22a717989"),
                            CreatedAt = new DateTime(2024, 8, 13, 21, 35, 32, 781, DateTimeKind.Local).AddTicks(6691),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Email = "seed@seed",
                            EntityStatus = 0,
                            Password = "seed",
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UpdatedBy = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = new Guid("4fa9a124-6a2a-4751-82c0-6f63201e84a6"),
                            CreatedAt = new DateTime(2024, 8, 13, 21, 35, 32, 783, DateTimeKind.Local).AddTicks(8483),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Email = "seed2@seed2",
                            EntityStatus = 0,
                            Password = "seed2",
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UpdatedBy = new Guid("00000000-0000-0000-0000-000000000000")
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
