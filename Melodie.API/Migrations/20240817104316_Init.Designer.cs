// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Melodie.API.Migrations
{
    [DbContext(typeof(MelodieAPIContext))]
    [Migration("20240817104316_Init")]
    partial class Init
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Melodie.API.Data.Entities.AlbumEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ArtistId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("EntityStatus")
                        .HasColumnType("int");

                    b.Property<DateOnly>("ReleaseDate")
                        .HasColumnType("date");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("UpdatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.ToTable("Albums");
                });

            modelBuilder.Entity("Melodie.API.Data.Entities.ArtistEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("EntityStatus")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("UpdatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.ToTable("Artists");

                    b.HasData(
                        new
                        {
                            Id = new Guid("608a8a2f-c35f-469f-9200-8be082ccd625"),
                            CreatedAt = new DateTime(2024, 8, 17, 12, 43, 15, 907, DateTimeKind.Local).AddTicks(6432),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            EntityStatus = 0,
                            Name = "Three Days Grace",
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UpdatedBy = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = new Guid("98850abe-a85d-4f31-832f-6fca01023bfc"),
                            CreatedAt = new DateTime(2024, 8, 17, 12, 43, 15, 907, DateTimeKind.Local).AddTicks(6714),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            EntityStatus = 0,
                            Name = "syudou",
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UpdatedBy = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = new Guid("fbe92a61-d187-463b-9dde-b4f090caeecf"),
                            CreatedAt = new DateTime(2024, 8, 17, 12, 43, 15, 907, DateTimeKind.Local).AddTicks(6723),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            EntityStatus = 0,
                            Name = "Gibbs",
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UpdatedBy = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = new Guid("7308c47f-2918-4e02-b6aa-25895536414a"),
                            CreatedAt = new DateTime(2024, 8, 17, 12, 43, 15, 907, DateTimeKind.Local).AddTicks(6725),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            EntityStatus = 0,
                            Name = "Ashton Irwin",
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UpdatedBy = new Guid("00000000-0000-0000-0000-000000000000")
                        });
                });

            modelBuilder.Entity("Melodie.API.Data.Entities.ArtistMusicGenreEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ArtistId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("EntityStatus")
                        .HasColumnType("int");

                    b.Property<Guid>("MusicGenreId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("UpdatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.ToTable("ArtistMusicGenres");

                    b.HasData(
                        new
                        {
                            Id = new Guid("1b37b8b0-ef09-45be-a533-4f311a961f2d"),
                            ArtistId = new Guid("608a8a2f-c35f-469f-9200-8be082ccd625"),
                            CreatedAt = new DateTime(2024, 8, 17, 12, 43, 15, 908, DateTimeKind.Local).AddTicks(6268),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            EntityStatus = 0,
                            MusicGenreId = new Guid("4c3bf51c-b3f2-407c-9aea-95f4606e57fa"),
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UpdatedBy = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = new Guid("43ebef7b-4b72-43b9-a538-30712c8dd8c4"),
                            ArtistId = new Guid("608a8a2f-c35f-469f-9200-8be082ccd625"),
                            CreatedAt = new DateTime(2024, 8, 17, 12, 43, 15, 908, DateTimeKind.Local).AddTicks(7929),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            EntityStatus = 0,
                            MusicGenreId = new Guid("97407a1a-26ec-4e55-ba42-de5241fe3334"),
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UpdatedBy = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = new Guid("f3812f72-0a0d-4ae5-9d8f-75189225265e"),
                            ArtistId = new Guid("608a8a2f-c35f-469f-9200-8be082ccd625"),
                            CreatedAt = new DateTime(2024, 8, 17, 12, 43, 15, 908, DateTimeKind.Local).AddTicks(7949),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            EntityStatus = 0,
                            MusicGenreId = new Guid("1532f07c-fb9a-46fa-b293-8809b41fa2f7"),
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UpdatedBy = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = new Guid("e284489f-9879-4335-bcfb-aa777e1d90e2"),
                            ArtistId = new Guid("608a8a2f-c35f-469f-9200-8be082ccd625"),
                            CreatedAt = new DateTime(2024, 8, 17, 12, 43, 15, 908, DateTimeKind.Local).AddTicks(7959),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            EntityStatus = 0,
                            MusicGenreId = new Guid("d37169ce-f63e-4f85-a746-91d4f1dc2799"),
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UpdatedBy = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = new Guid("e24137b4-0cbe-473c-b1c8-11fcb6d26a6d"),
                            ArtistId = new Guid("98850abe-a85d-4f31-832f-6fca01023bfc"),
                            CreatedAt = new DateTime(2024, 8, 17, 12, 43, 15, 908, DateTimeKind.Local).AddTicks(7964),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            EntityStatus = 0,
                            MusicGenreId = new Guid("ea8363d0-0a24-4388-aebf-9375659f515f"),
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UpdatedBy = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = new Guid("c5b3fc74-5cd9-4140-b1ef-e204f2790b2a"),
                            ArtistId = new Guid("fbe92a61-d187-463b-9dde-b4f090caeecf"),
                            CreatedAt = new DateTime(2024, 8, 17, 12, 43, 15, 908, DateTimeKind.Local).AddTicks(7969),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            EntityStatus = 0,
                            MusicGenreId = new Guid("74f836ff-6b7a-4276-a315-5efe3b347f80"),
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UpdatedBy = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = new Guid("3549a770-0240-4c9a-8a64-e64814971681"),
                            ArtistId = new Guid("7308c47f-2918-4e02-b6aa-25895536414a"),
                            CreatedAt = new DateTime(2024, 8, 17, 12, 43, 15, 908, DateTimeKind.Local).AddTicks(7974),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            EntityStatus = 0,
                            MusicGenreId = new Guid("d5ae2db2-8042-4e61-9497-a9eb86e5818f"),
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UpdatedBy = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = new Guid("a5322655-97eb-43f3-ab9c-7b8277b5e260"),
                            ArtistId = new Guid("7308c47f-2918-4e02-b6aa-25895536414a"),
                            CreatedAt = new DateTime(2024, 8, 17, 12, 43, 15, 908, DateTimeKind.Local).AddTicks(7978),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            EntityStatus = 0,
                            MusicGenreId = new Guid("187d526b-95ba-4665-b39d-74136d3f02f4"),
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UpdatedBy = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = new Guid("4a56f37b-d20d-451f-b5b2-9d43c0287986"),
                            ArtistId = new Guid("7308c47f-2918-4e02-b6aa-25895536414a"),
                            CreatedAt = new DateTime(2024, 8, 17, 12, 43, 15, 908, DateTimeKind.Local).AddTicks(7983),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            EntityStatus = 0,
                            MusicGenreId = new Guid("5c969512-a829-49fb-83b4-9baacc165d79"),
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UpdatedBy = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = new Guid("a1b2cdea-97f6-497f-ae40-ada84aaddca6"),
                            ArtistId = new Guid("7308c47f-2918-4e02-b6aa-25895536414a"),
                            CreatedAt = new DateTime(2024, 8, 17, 12, 43, 15, 908, DateTimeKind.Local).AddTicks(7987),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            EntityStatus = 0,
                            MusicGenreId = new Guid("db2878c3-9c9f-40b2-bd5d-082cc2d61c5a"),
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UpdatedBy = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = new Guid("a130a5d8-396e-4af0-b20d-e2966a59c9cf"),
                            ArtistId = new Guid("7308c47f-2918-4e02-b6aa-25895536414a"),
                            CreatedAt = new DateTime(2024, 8, 17, 12, 43, 15, 908, DateTimeKind.Local).AddTicks(7992),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            EntityStatus = 0,
                            MusicGenreId = new Guid("d8b5d2f9-9c5f-4444-8ad2-80d0de7a5e93"),
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UpdatedBy = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = new Guid("27f4572a-d512-48de-ad8d-7db2f3886fcb"),
                            ArtistId = new Guid("7308c47f-2918-4e02-b6aa-25895536414a"),
                            CreatedAt = new DateTime(2024, 8, 17, 12, 43, 15, 908, DateTimeKind.Local).AddTicks(7999),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            EntityStatus = 0,
                            MusicGenreId = new Guid("71787e50-98f2-421d-8cb9-a7147032e5ba"),
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UpdatedBy = new Guid("00000000-0000-0000-0000-000000000000")
                        });
                });

            modelBuilder.Entity("Melodie.API.Data.Entities.LikedEntities.LikedAlbumEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("EntityId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("EntityStatus")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("UpdatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.ToTable("LikedAlbums");
                });

            modelBuilder.Entity("Melodie.API.Data.Entities.LikedEntities.LikedArtistEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("EntityId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("EntityStatus")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("UpdatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.ToTable("LikedArtists");
                });

            modelBuilder.Entity("Melodie.API.Data.Entities.LikedEntities.LikedSingleEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("EntityId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("EntityStatus")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("UpdatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.ToTable("LikedSingles");
                });

            modelBuilder.Entity("Melodie.API.Data.Entities.LikedEntities.LikedTrackEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("EntityId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("EntityStatus")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("UpdatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.ToTable("LikedTracks");
                });

            modelBuilder.Entity("Melodie.API.Data.Entities.MusicGenreEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("EntityStatus")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("UpdatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.ToTable("MusicGenres");

                    b.HasData(
                        new
                        {
                            Id = new Guid("4c3bf51c-b3f2-407c-9aea-95f4606e57fa"),
                            CreatedAt = new DateTime(2024, 8, 17, 12, 43, 15, 908, DateTimeKind.Local).AddTicks(136),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            EntityStatus = 0,
                            Name = "Post-grunge",
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UpdatedBy = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = new Guid("97407a1a-26ec-4e55-ba42-de5241fe3334"),
                            CreatedAt = new DateTime(2024, 8, 17, 12, 43, 15, 908, DateTimeKind.Local).AddTicks(436),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            EntityStatus = 0,
                            Name = "Hard rock",
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UpdatedBy = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = new Guid("1532f07c-fb9a-46fa-b293-8809b41fa2f7"),
                            CreatedAt = new DateTime(2024, 8, 17, 12, 43, 15, 908, DateTimeKind.Local).AddTicks(445),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            EntityStatus = 0,
                            Name = "Alternative rock",
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UpdatedBy = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = new Guid("d37169ce-f63e-4f85-a746-91d4f1dc2799"),
                            CreatedAt = new DateTime(2024, 8, 17, 12, 43, 15, 908, DateTimeKind.Local).AddTicks(447),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            EntityStatus = 0,
                            Name = "Alternative metal",
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UpdatedBy = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = new Guid("ea8363d0-0a24-4388-aebf-9375659f515f"),
                            CreatedAt = new DateTime(2024, 8, 17, 12, 43, 15, 908, DateTimeKind.Local).AddTicks(449),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            EntityStatus = 0,
                            Name = "Nu metal",
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UpdatedBy = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = new Guid("74f836ff-6b7a-4276-a315-5efe3b347f80"),
                            CreatedAt = new DateTime(2024, 8, 17, 12, 43, 15, 908, DateTimeKind.Local).AddTicks(452),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            EntityStatus = 0,
                            Name = "J-Pop",
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UpdatedBy = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = new Guid("d5ae2db2-8042-4e61-9497-a9eb86e5818f"),
                            CreatedAt = new DateTime(2024, 8, 17, 12, 43, 15, 908, DateTimeKind.Local).AddTicks(454),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            EntityStatus = 0,
                            Name = "Hip-hop",
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UpdatedBy = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = new Guid("187d526b-95ba-4665-b39d-74136d3f02f4"),
                            CreatedAt = new DateTime(2024, 8, 17, 12, 43, 15, 908, DateTimeKind.Local).AddTicks(456),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            EntityStatus = 0,
                            Name = "Pop rock",
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UpdatedBy = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = new Guid("5c969512-a829-49fb-83b4-9baacc165d79"),
                            CreatedAt = new DateTime(2024, 8, 17, 12, 43, 15, 908, DateTimeKind.Local).AddTicks(462),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            EntityStatus = 0,
                            Name = "Pop",
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UpdatedBy = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = new Guid("db2878c3-9c9f-40b2-bd5d-082cc2d61c5a"),
                            CreatedAt = new DateTime(2024, 8, 17, 12, 43, 15, 908, DateTimeKind.Local).AddTicks(465),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            EntityStatus = 0,
                            Name = "Pop punk",
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UpdatedBy = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = new Guid("d8b5d2f9-9c5f-4444-8ad2-80d0de7a5e93"),
                            CreatedAt = new DateTime(2024, 8, 17, 12, 43, 15, 908, DateTimeKind.Local).AddTicks(467),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            EntityStatus = 0,
                            Name = "Power pop",
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UpdatedBy = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = new Guid("71787e50-98f2-421d-8cb9-a7147032e5ba"),
                            CreatedAt = new DateTime(2024, 8, 17, 12, 43, 15, 908, DateTimeKind.Local).AddTicks(469),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            EntityStatus = 0,
                            Name = "Rock",
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UpdatedBy = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = new Guid("592a073e-0079-4f72-a47b-e2df4b8d0c94"),
                            CreatedAt = new DateTime(2024, 8, 17, 12, 43, 15, 908, DateTimeKind.Local).AddTicks(471),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            EntityStatus = 0,
                            Name = "New wave",
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UpdatedBy = new Guid("00000000-0000-0000-0000-000000000000")
                        });
                });

            modelBuilder.Entity("Melodie.API.Data.Entities.PlaylistEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("EntityStatus")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("UpdatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.ToTable("Playlists");
                });

            modelBuilder.Entity("Melodie.API.Data.Entities.QueueEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("EntityStatus")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("UpdatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.ToTable("Queues");
                });

            modelBuilder.Entity("Melodie.API.Data.Entities.SingleEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ArtistId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("EntityStatus")
                        .HasColumnType("int");

                    b.Property<DateOnly>("ReleaseDate")
                        .HasColumnType("date");

                    b.Property<Guid>("TrackId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("UpdatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.ToTable("Singles");

                    b.HasData(
                        new
                        {
                            Id = new Guid("259a594f-1322-4993-89c6-b11e3f7e3bba"),
                            ArtistId = new Guid("608a8a2f-c35f-469f-9200-8be082ccd625"),
                            CreatedAt = new DateTime(2024, 8, 17, 12, 43, 15, 909, DateTimeKind.Local).AddTicks(4244),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            EntityStatus = 0,
                            ReleaseDate = new DateOnly(2009, 9, 1),
                            TrackId = new Guid("a1b787af-ed92-45ec-990d-5182d1ae0d9a"),
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UpdatedBy = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = new Guid("c1b8f045-ac32-4bca-afd4-3f1d2897a206"),
                            ArtistId = new Guid("98850abe-a85d-4f31-832f-6fca01023bfc"),
                            CreatedAt = new DateTime(2024, 8, 17, 12, 43, 15, 909, DateTimeKind.Local).AddTicks(5505),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            EntityStatus = 0,
                            ReleaseDate = new DateOnly(2024, 2, 21),
                            TrackId = new Guid("e0d58df5-4841-47f5-9cca-9349f92a5bb7"),
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UpdatedBy = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = new Guid("27e447d1-3f42-45fa-840a-b2d544f9b93b"),
                            ArtistId = new Guid("98850abe-a85d-4f31-832f-6fca01023bfc"),
                            CreatedAt = new DateTime(2024, 8, 17, 12, 43, 15, 909, DateTimeKind.Local).AddTicks(5535),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            EntityStatus = 0,
                            ReleaseDate = new DateOnly(2023, 11, 17),
                            TrackId = new Guid("719e6fa2-fccf-474b-93df-368f5601def4"),
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UpdatedBy = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = new Guid("2857111f-e1e0-4080-a473-67c7c3337970"),
                            ArtistId = new Guid("fbe92a61-d187-463b-9dde-b4f090caeecf"),
                            CreatedAt = new DateTime(2024, 8, 17, 12, 43, 15, 909, DateTimeKind.Local).AddTicks(5541),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            EntityStatus = 0,
                            ReleaseDate = new DateOnly(2024, 4, 5),
                            TrackId = new Guid("46e924c3-cad3-4eb3-a947-ae533eb1d6b2"),
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UpdatedBy = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = new Guid("eb83f7c7-8442-4097-83b9-24846b0696ee"),
                            ArtistId = new Guid("7308c47f-2918-4e02-b6aa-25895536414a"),
                            CreatedAt = new DateTime(2024, 8, 17, 12, 43, 15, 909, DateTimeKind.Local).AddTicks(5547),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            EntityStatus = 0,
                            ReleaseDate = new DateOnly(2020, 9, 24),
                            TrackId = new Guid("6b770726-1e00-46d4-b904-45c247628732"),
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UpdatedBy = new Guid("00000000-0000-0000-0000-000000000000")
                        });
                });

            modelBuilder.Entity("Melodie.API.Data.Entities.TrackEntities.AlbumTrackEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("EntityId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("EntityStatus")
                        .HasColumnType("int");

                    b.Property<Guid>("TrackId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("UpdatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.ToTable("AlbumTrack");
                });

            modelBuilder.Entity("Melodie.API.Data.Entities.TrackEntities.QueueTrackEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("EntityId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("EntityStatus")
                        .HasColumnType("int");

                    b.Property<Guid>("TrackId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("UpdatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.ToTable("QueueTrack");
                });

            modelBuilder.Entity("Melodie.API.Data.Entities.TrackEntities.SingleTrackEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("EntityId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("EntityStatus")
                        .HasColumnType("int");

                    b.Property<Guid>("TrackId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("UpdatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.ToTable("SingleTrack");

                    b.HasData(
                        new
                        {
                            Id = new Guid("01a8d865-bfb9-4b5d-b371-067c835bfe83"),
                            CreatedAt = new DateTime(2024, 8, 17, 12, 43, 15, 909, DateTimeKind.Local).AddTicks(9061),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            EntityId = new Guid("259a594f-1322-4993-89c6-b11e3f7e3bba"),
                            EntityStatus = 0,
                            TrackId = new Guid("a1b787af-ed92-45ec-990d-5182d1ae0d9a"),
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UpdatedBy = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = new Guid("e8a8ddff-d33e-4463-abab-3739242aca24"),
                            CreatedAt = new DateTime(2024, 8, 17, 12, 43, 15, 909, DateTimeKind.Local).AddTicks(9867),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            EntityId = new Guid("c1b8f045-ac32-4bca-afd4-3f1d2897a206"),
                            EntityStatus = 0,
                            TrackId = new Guid("e0d58df5-4841-47f5-9cca-9349f92a5bb7"),
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UpdatedBy = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = new Guid("d244c816-5ec3-4831-a73e-2ab3389eed4a"),
                            CreatedAt = new DateTime(2024, 8, 17, 12, 43, 15, 909, DateTimeKind.Local).AddTicks(9884),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            EntityId = new Guid("27e447d1-3f42-45fa-840a-b2d544f9b93b"),
                            EntityStatus = 0,
                            TrackId = new Guid("719e6fa2-fccf-474b-93df-368f5601def4"),
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UpdatedBy = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = new Guid("a4607573-6778-4302-a640-1a07a27ee5d2"),
                            CreatedAt = new DateTime(2024, 8, 17, 12, 43, 15, 909, DateTimeKind.Local).AddTicks(9889),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            EntityId = new Guid("2857111f-e1e0-4080-a473-67c7c3337970"),
                            EntityStatus = 0,
                            TrackId = new Guid("46e924c3-cad3-4eb3-a947-ae533eb1d6b2"),
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UpdatedBy = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = new Guid("3121b6ef-d97c-4ae6-99b3-f13d58c71c62"),
                            CreatedAt = new DateTime(2024, 8, 17, 12, 43, 15, 909, DateTimeKind.Local).AddTicks(9894),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            EntityId = new Guid("eb83f7c7-8442-4097-83b9-24846b0696ee"),
                            EntityStatus = 0,
                            TrackId = new Guid("6b770726-1e00-46d4-b904-45c247628732"),
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UpdatedBy = new Guid("00000000-0000-0000-0000-000000000000")
                        });
                });

            modelBuilder.Entity("Melodie.API.Data.Entities.TrackEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("EntityStatus")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("UpdatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.ToTable("Tracks");

                    b.HasData(
                        new
                        {
                            Id = new Guid("a1b787af-ed92-45ec-990d-5182d1ae0d9a"),
                            CreatedAt = new DateTime(2024, 8, 17, 12, 43, 15, 909, DateTimeKind.Local).AddTicks(227),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            EntityStatus = 0,
                            Title = "Break",
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UpdatedBy = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = new Guid("e0d58df5-4841-47f5-9cca-9349f92a5bb7"),
                            CreatedAt = new DateTime(2024, 8, 17, 12, 43, 15, 909, DateTimeKind.Local).AddTicks(507),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            EntityStatus = 0,
                            Title = "Inochizuna",
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UpdatedBy = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = new Guid("719e6fa2-fccf-474b-93df-368f5601def4"),
                            CreatedAt = new DateTime(2024, 8, 17, 12, 43, 15, 909, DateTimeKind.Local).AddTicks(516),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            EntityStatus = 0,
                            Title = "yattyattawa",
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UpdatedBy = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = new Guid("46e924c3-cad3-4eb3-a947-ae533eb1d6b2"),
                            CreatedAt = new DateTime(2024, 8, 17, 12, 43, 15, 909, DateTimeKind.Local).AddTicks(519),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            EntityStatus = 0,
                            Title = "Nic na mnie",
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UpdatedBy = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = new Guid("6b770726-1e00-46d4-b904-45c247628732"),
                            CreatedAt = new DateTime(2024, 8, 17, 12, 43, 15, 909, DateTimeKind.Local).AddTicks(521),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            EntityStatus = 0,
                            Title = "Skinny Skinny",
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UpdatedBy = new Guid("00000000-0000-0000-0000-000000000000")
                        });
                });

            modelBuilder.Entity("Melodie.API.Data.Entities.UserEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("EntityStatus")
                        .HasColumnType("int");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("UpdatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = new Guid("fec32de7-126c-47c6-956f-02ef170ee1db"),
                            CreatedAt = new DateTime(2024, 8, 17, 12, 43, 15, 905, DateTimeKind.Local).AddTicks(2772),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Email = "seed@seed",
                            EntityStatus = 0,
                            Password = "seed",
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UpdatedBy = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = new Guid("026f9875-97f5-48da-b1bc-f638edb87325"),
                            CreatedAt = new DateTime(2024, 8, 17, 12, 43, 15, 907, DateTimeKind.Local).AddTicks(4307),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Email = "seed2@seed2",
                            EntityStatus = 0,
                            Password = "seed2",
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UpdatedBy = new Guid("00000000-0000-0000-0000-000000000000")
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
